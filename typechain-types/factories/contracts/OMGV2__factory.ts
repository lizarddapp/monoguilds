/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OMGV2, OMGV2Interface } from "../../contracts/OMGV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "addValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "valueA",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "valueB",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a89806100206000396000f3fe608060405234801561001057600080fd5b50600436106101155760003560e01c806339509351116100a257806395d89b411161007157806395d89b41146102d25780639dc29fac146102f0578063a457c2d71461030c578063a9059cbb1461033c578063dd62ed3e1461036c57610115565b8063395093511461023857806340c10f19146102685780636af155051461028457806370a08231146102a257610115565b806318160ddd116100e957806318160ddd1461019057806320965255146101ae57806323b872dd146101cc578063313ce567146101fc578063355274ea1461021a57610115565b8062df51611461011a578063040f0aee1461013857806306fdde0314610142578063095ea7b314610160575b600080fd5b61012261039c565b60405161012f919061152d565b60405180910390f35b6101406103a2565b005b61014a6103b9565b60405161015791906113ab565b60405180910390f35b61017a6004803603810190610175919061116d565b61044b565b6040516101879190611390565b60405180910390f35b61019861046e565b6040516101a5919061152d565b60405180910390f35b6101b6610478565b6040516101c3919061152d565b60405180910390f35b6101e660048036038101906101e1919061111e565b610481565b6040516101f39190611390565b60405180910390f35b6102046104b0565b6040516102119190611548565b60405180910390f35b6102226104b9565b60405161022f919061152d565b60405180910390f35b610252600480360381019061024d919061116d565b6104c3565b60405161025f9190611390565b60405180910390f35b610282600480360381019061027d919061116d565b61056d565b005b61028c61057b565b604051610299919061152d565b60405180910390f35b6102bc60048036038101906102b791906110b9565b610581565b6040516102c9919061152d565b60405180910390f35b6102da6105ca565b6040516102e791906113ab565b60405180910390f35b61030a6004803603810190610305919061116d565b61065c565b005b6103266004803603810190610321919061116d565b61066a565b6040516103339190611390565b60405180910390f35b6103566004803603810190610351919061116d565b610754565b6040516103639190611390565b60405180910390f35b610386600480360381019061038191906110e2565b610777565b604051610393919061152d565b60405180910390f35b60995481565b60016098546103b1919061157f565b609881905550565b6060603680546103c890611691565b80601f01602080910402602001604051908101604052809291908181526020018280546103f490611691565b80156104415780601f1061041657610100808354040283529160200191610441565b820191906000526020600020905b81548152906001019060200180831161042457829003601f168201915b5050505050905090565b6000806104566107fe565b9050610463818585610806565b600191505092915050565b6000603554905090565b6000602c905090565b60008061048c6107fe565b90506104998582856109d1565b6104a4858585610a5d565b60019150509392505050565b60006012905090565b6000606554905090565b6000806104ce6107fe565b9050610562818585603460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461055d919061157f565b610806565b600191505092915050565b6105778282610ce1565b5050565b60985481565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060603780546105d990611691565b80601f016020809104026020016040519081016040528092919081815260200182805461060590611691565b80156106525780601f1061062757610100808354040283529160200191610652565b820191906000526020600020905b81548152906001019060200180831161063557829003601f168201915b5050505050905090565b6106668282610d4b565b5050565b6000806106756107fe565b90506000603460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508381101561073b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610732906114ed565b60405180910390fd5b6107488286868403610806565b60019250505092915050565b60008061075f6107fe565b905061076c818585610a5d565b600191505092915050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610876576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086d906114cd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dd9061140d565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109c4919061152d565b60405180910390a3505050565b60006109dd8484610777565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a575781811015610a49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a409061142d565b60405180910390fd5b610a568484848403610806565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610acd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac49061148d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b34906113cd565b60405180910390fd5b610b48838383610f24565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610bcf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc69061144d565b60405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c64919061157f565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cc8919061152d565b60405180910390a3610cdb848484610f29565b50505050565b610ce96104b9565b81610cf261046e565b610cfc919061157f565b1115610d3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d34906114ad565b60405180910390fd5b610d478282610f2e565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610dbb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db29061146d565b60405180910390fd5b610dc782600083610f24565b6000603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e45906113ed565b60405180910390fd5b818103603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160356000828254610ea691906115d5565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610f0b919061152d565b60405180910390a3610f1f83600084610f29565b505050565b505050565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f959061150d565b60405180910390fd5b610faa60008383610f24565b8060356000828254610fbc919061157f565b9250508190555080603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611012919061157f565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611077919061152d565b60405180910390a361108b60008383610f29565b5050565b60008135905061109e81611a25565b92915050565b6000813590506110b381611a3c565b92915050565b6000602082840312156110cb57600080fd5b60006110d98482850161108f565b91505092915050565b600080604083850312156110f557600080fd5b60006111038582860161108f565b92505060206111148582860161108f565b9150509250929050565b60008060006060848603121561113357600080fd5b60006111418682870161108f565b93505060206111528682870161108f565b9250506040611163868287016110a4565b9150509250925092565b6000806040838503121561118057600080fd5b600061118e8582860161108f565b925050602061119f858286016110a4565b9150509250929050565b6111b28161161b565b82525050565b60006111c382611563565b6111cd818561156e565b93506111dd81856020860161165e565b6111e681611721565b840191505092915050565b60006111fe60238361156e565b915061120982611732565b604082019050919050565b600061122160228361156e565b915061122c82611781565b604082019050919050565b600061124460228361156e565b915061124f826117d0565b604082019050919050565b6000611267601d8361156e565b91506112728261181f565b602082019050919050565b600061128a60268361156e565b915061129582611848565b604082019050919050565b60006112ad60218361156e565b91506112b882611897565b604082019050919050565b60006112d060258361156e565b91506112db826118e6565b604082019050919050565b60006112f360198361156e565b91506112fe82611935565b602082019050919050565b600061131660248361156e565b91506113218261195e565b604082019050919050565b600061133960258361156e565b9150611344826119ad565b604082019050919050565b600061135c601f8361156e565b9150611367826119fc565b602082019050919050565b61137b81611647565b82525050565b61138a81611651565b82525050565b60006020820190506113a560008301846111a9565b92915050565b600060208201905081810360008301526113c581846111b8565b905092915050565b600060208201905081810360008301526113e6816111f1565b9050919050565b6000602082019050818103600083015261140681611214565b9050919050565b6000602082019050818103600083015261142681611237565b9050919050565b600060208201905081810360008301526114468161125a565b9050919050565b600060208201905081810360008301526114668161127d565b9050919050565b60006020820190508181036000830152611486816112a0565b9050919050565b600060208201905081810360008301526114a6816112c3565b9050919050565b600060208201905081810360008301526114c6816112e6565b9050919050565b600060208201905081810360008301526114e681611309565b9050919050565b600060208201905081810360008301526115068161132c565b9050919050565b600060208201905081810360008301526115268161134f565b9050919050565b60006020820190506115426000830184611372565b92915050565b600060208201905061155d6000830184611381565b92915050565b600081519050919050565b600082825260208201905092915050565b600061158a82611647565b915061159583611647565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115ca576115c96116c3565b5b828201905092915050565b60006115e082611647565b91506115eb83611647565b9250828210156115fe576115fd6116c3565b5b828203905092915050565b600061161482611627565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561167c578082015181840152602081019050611661565b8381111561168b576000848401525b50505050565b600060028204905060018216806116a957607f821691505b602082108114156116bd576116bc6116f2565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332304361707065643a2063617020657863656564656400000000000000600082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b611a2e81611609565b8114611a3957600080fd5b50565b611a4581611647565b8114611a5057600080fd5b5056fea2646970667358221220dae5ef7c30d8e58d0eb8d5800a97ae56d460b25ce8f16918bb23c504d0506d8364736f6c63430008020033";

type OMGV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OMGV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OMGV2__factory extends ContractFactory {
  constructor(...args: OMGV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OMGV2> {
    return super.deploy(overrides || {}) as Promise<OMGV2>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OMGV2 {
    return super.attach(address) as OMGV2;
  }
  override connect(signer: Signer): OMGV2__factory {
    return super.connect(signer) as OMGV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OMGV2Interface {
    return new utils.Interface(_abi) as OMGV2Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): OMGV2 {
    return new Contract(address, _abi, signerOrProvider) as OMGV2;
  }
}
