/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SapphireToken,
  SapphireTokenInterface,
} from "../../contracts/SapphireToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611f97806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806340c10f19116100975780639dc29fac116100665780639dc29fac14610276578063a457c2d714610292578063a9059cbb146102c2578063dd62ed3e146102f2576100f5565b806340c10f191461020257806370a082311461021e5780638129fc1c1461024e57806395d89b4114610258576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce56714610196578063355274ea146101b457806339509351146101d2576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b610102610322565b60405161010f9190611792565b60405180910390f35b610132600480360381019061012d91906114eb565b6103b4565b60405161013f9190611777565b60405180910390f35b6101506103d7565b60405161015d9190611974565b60405180910390f35b610180600480360381019061017b919061149c565b6103e1565b60405161018d9190611777565b60405180910390f35b61019e610410565b6040516101ab919061198f565b60405180910390f35b6101bc610419565b6040516101c99190611974565b60405180910390f35b6101ec60048036038101906101e791906114eb565b610423565b6040516101f99190611777565b60405180910390f35b61021c600480360381019061021791906114eb565b6104cd565b005b61023860048036038101906102339190611437565b6104db565b6040516102459190611974565b60405180910390f35b610256610524565b005b61026061069c565b60405161026d9190611792565b60405180910390f35b610290600480360381019061028b91906114eb565b61072e565b005b6102ac60048036038101906102a791906114eb565b61073c565b6040516102b99190611777565b60405180910390f35b6102dc60048036038101906102d791906114eb565b610826565b6040516102e99190611777565b60405180910390f35b61030c60048036038101906103079190611460565b610849565b6040516103199190611974565b60405180910390f35b60606036805461033190611ad8565b80601f016020809104026020016040519081016040528092919081815260200182805461035d90611ad8565b80156103aa5780601f1061037f576101008083540402835291602001916103aa565b820191906000526020600020905b81548152906001019060200180831161038d57829003601f168201915b5050505050905090565b6000806103bf6108d0565b90506103cc8185856108d8565b600191505092915050565b6000603554905090565b6000806103ec6108d0565b90506103f9858285610aa3565b610404858585610b2f565b60019150509392505050565b60006012905090565b6000606554905090565b60008061042e6108d0565b90506104c2818585603460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104bd91906119c6565b6108d8565b600191505092915050565b6104d78282610db3565b5050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600060019054906101000a900460ff1661054c5760008054906101000a900460ff1615610555565b610554610e1d565b5b610594576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058b90611874565b60405180910390fd5b60008060019054906101000a900460ff1615905080156105e4576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6106586040518060400160405280600e81526020017f536170706869726520546f6b656e0000000000000000000000000000000000008152506040518060400160405280600881526020017f5341505048495245000000000000000000000000000000000000000000000000815250610e2e565b61066c6aa56fa5b99019a5c8000000610e8b565b61067833612710610db3565b80156106995760008060016101000a81548160ff0219169083151502179055505b50565b6060603780546106ab90611ad8565b80601f01602080910402602001604051908101604052809291908181526020018280546106d790611ad8565b80156107245780601f106106f957610100808354040283529160200191610724565b820191906000526020600020905b81548152906001019060200180831161070757829003601f168201915b5050505050905090565b6107388282610ee6565b5050565b6000806107476108d0565b90506000603460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508381101561080d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080490611934565b60405180910390fd5b61081a82868684036108d8565b60019250505092915050565b6000806108316108d0565b905061083e818585610b2f565b600191505092915050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610948576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093f906118f4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109af90611814565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a969190611974565b60405180910390a3505050565b6000610aaf8484610849565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610b295781811015610b1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1290611834565b60405180910390fd5b610b2884848484036108d8565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b96906118b4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c06906117b4565b60405180910390fd5b610c1a8383836110bf565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ca1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9890611854565b60405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d3691906119c6565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d9a9190611974565b60405180910390a3610dad8484846110c4565b50505050565b610dbb610419565b81610dc46103d7565b610dce91906119c6565b1115610e0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e06906118d4565b60405180910390fd5b610e1982826110c9565b5050565b6000610e283061122a565b15905090565b600060019054906101000a900460ff16610e7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7490611914565b60405180910390fd5b610e87828261124d565b5050565b600060019054906101000a900460ff16610eda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed190611914565b60405180910390fd5b610ee3816112ce565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4d90611894565b60405180910390fd5b610f62826000836110bf565b6000603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610fe9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe0906117f4565b60405180910390fd5b818103603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603560008282546110419190611a1c565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110a69190611974565b60405180910390a36110ba836000846110c4565b505050565b505050565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611139576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113090611954565b60405180910390fd5b611145600083836110bf565b806035600082825461115791906119c6565b9250508190555080603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111ad91906119c6565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516112129190611974565b60405180910390a3611226600083836110c4565b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff1661129c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129390611914565b60405180910390fd5b81603690805190602001906112b292919061136a565b5080603790805190602001906112c992919061136a565b505050565b600060019054906101000a900460ff1661131d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131490611914565b60405180910390fd5b60008111611360576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611357906117d4565b60405180910390fd5b8060658190555050565b82805461137690611ad8565b90600052602060002090601f01602090048101928261139857600085556113df565b82601f106113b157805160ff19168380011785556113df565b828001600101855582156113df579182015b828111156113de5782518255916020019190600101906113c3565b5b5090506113ec91906113f0565b5090565b5b808211156114095760008160009055506001016113f1565b5090565b60008135905061141c81611f33565b92915050565b60008135905061143181611f4a565b92915050565b60006020828403121561144957600080fd5b60006114578482850161140d565b91505092915050565b6000806040838503121561147357600080fd5b60006114818582860161140d565b92505060206114928582860161140d565b9150509250929050565b6000806000606084860312156114b157600080fd5b60006114bf8682870161140d565b93505060206114d08682870161140d565b92505060406114e186828701611422565b9150509250925092565b600080604083850312156114fe57600080fd5b600061150c8582860161140d565b925050602061151d85828601611422565b9150509250929050565b61153081611a62565b82525050565b6000611541826119aa565b61154b81856119b5565b935061155b818560208601611aa5565b61156481611b68565b840191505092915050565b600061157c6023836119b5565b915061158782611b79565b604082019050919050565b600061159f6015836119b5565b91506115aa82611bc8565b602082019050919050565b60006115c26022836119b5565b91506115cd82611bf1565b604082019050919050565b60006115e56022836119b5565b91506115f082611c40565b604082019050919050565b6000611608601d836119b5565b915061161382611c8f565b602082019050919050565b600061162b6026836119b5565b915061163682611cb8565b604082019050919050565b600061164e602e836119b5565b915061165982611d07565b604082019050919050565b60006116716021836119b5565b915061167c82611d56565b604082019050919050565b60006116946025836119b5565b915061169f82611da5565b604082019050919050565b60006116b76019836119b5565b91506116c282611df4565b602082019050919050565b60006116da6024836119b5565b91506116e582611e1d565b604082019050919050565b60006116fd602b836119b5565b915061170882611e6c565b604082019050919050565b60006117206025836119b5565b915061172b82611ebb565b604082019050919050565b6000611743601f836119b5565b915061174e82611f0a565b602082019050919050565b61176281611a8e565b82525050565b61177181611a98565b82525050565b600060208201905061178c6000830184611527565b92915050565b600060208201905081810360008301526117ac8184611536565b905092915050565b600060208201905081810360008301526117cd8161156f565b9050919050565b600060208201905081810360008301526117ed81611592565b9050919050565b6000602082019050818103600083015261180d816115b5565b9050919050565b6000602082019050818103600083015261182d816115d8565b9050919050565b6000602082019050818103600083015261184d816115fb565b9050919050565b6000602082019050818103600083015261186d8161161e565b9050919050565b6000602082019050818103600083015261188d81611641565b9050919050565b600060208201905081810360008301526118ad81611664565b9050919050565b600060208201905081810360008301526118cd81611687565b9050919050565b600060208201905081810360008301526118ed816116aa565b9050919050565b6000602082019050818103600083015261190d816116cd565b9050919050565b6000602082019050818103600083015261192d816116f0565b9050919050565b6000602082019050818103600083015261194d81611713565b9050919050565b6000602082019050818103600083015261196d81611736565b9050919050565b60006020820190506119896000830184611759565b92915050565b60006020820190506119a46000830184611768565b92915050565b600081519050919050565b600082825260208201905092915050565b60006119d182611a8e565b91506119dc83611a8e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611a1157611a10611b0a565b5b828201905092915050565b6000611a2782611a8e565b9150611a3283611a8e565b925082821015611a4557611a44611b0a565b5b828203905092915050565b6000611a5b82611a6e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611ac3578082015181840152602081019050611aa8565b83811115611ad2576000848401525b50505050565b60006002820490506001821680611af057607f821691505b60208210811415611b0457611b03611b39565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332304361707065643a2063617020697320300000000000000000000000600082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332304361707065643a2063617020657863656564656400000000000000600082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b611f3c81611a50565b8114611f4757600080fd5b50565b611f5381611a8e565b8114611f5e57600080fd5b5056fea264697066735822122047fe8d0801b2f6fbff3f5db686d65d4fd8be967adf8e099e0e677a65ccee7e3964736f6c63430008040033";

type SapphireTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SapphireTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SapphireToken__factory extends ContractFactory {
  constructor(...args: SapphireTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SapphireToken> {
    return super.deploy(overrides || {}) as Promise<SapphireToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SapphireToken {
    return super.attach(address) as SapphireToken;
  }
  override connect(signer: Signer): SapphireToken__factory {
    return super.connect(signer) as SapphireToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SapphireTokenInterface {
    return new utils.Interface(_abi) as SapphireTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SapphireToken {
    return new Contract(address, _abi, signerOrProvider) as SapphireToken;
  }
}
