/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Random, RandomInterface } from "../../contracts/Random";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_randomSeed",
        type: "uint256",
      },
    ],
    name: "setup",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vrf",
    outputs: [
      {
        internalType: "bytes32",
        name: "result",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610564806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630c949043146100465780634313b9e5146100645780635c975abb14610080575b600080fd5b61004e61009e565b60405161005b91906103ed565b60405180910390f35b61007e60048036038101906100799190610345565b61010a565b005b6100886101fe565b60405161009591906103d2565b60405180910390f35b60006100a861030e565b43816000600181106100e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201818152505060405160208160208460ff600019fa61010157fe5b80519250505090565b600060019054906101000a900460ff166101325760008054906101000a900460ff161561013b565b61013a610215565b5b61017a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017190610408565b60405180910390fd5b60008060019054906101000a900460ff1615905080156101ca576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6101d2610226565b8160658190555080156101fa5760008060016101000a81548160ff0219169083151502179055505b5050565b6000603360009054906101000a900460ff16905090565b60006102203061027f565b15905090565b600060019054906101000a900460ff16610275576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026c90610428565b60405180910390fd5b61027d6102a2565b565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff166102f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e890610428565b60405180910390fd5b6000603360006101000a81548160ff021916908315150217905550565b6040518060200160405280600190602082028036833780820191505090505090565b60008135905061033f81610517565b92915050565b60006020828403121561035757600080fd5b600061036584828501610330565b91505092915050565b61037781610459565b82525050565b61038681610465565b82525050565b6000610399602e83610448565b91506103a482610479565b604082019050919050565b60006103bc602b83610448565b91506103c7826104c8565b604082019050919050565b60006020820190506103e7600083018461036e565b92915050565b6000602082019050610402600083018461037d565b92915050565b600060208201905081810360008301526104218161038c565b9050919050565b60006020820190508181036000830152610441816103af565b9050919050565b600082825260208201905092915050565b60008115159050919050565b6000819050919050565b6000819050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6105208161046f565b811461052b57600080fd5b5056fea2646970667358221220b3b5df671adbfb98f1eab6cebb6e9a1334ec6954bae6c53d7c537357d05d97b264736f6c63430008040033";

type RandomConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RandomConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Random__factory extends ContractFactory {
  constructor(...args: RandomConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Random> {
    return super.deploy(overrides || {}) as Promise<Random>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Random {
    return super.attach(address) as Random;
  }
  override connect(signer: Signer): Random__factory {
    return super.connect(signer) as Random__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomInterface {
    return new utils.Interface(_abi) as RandomInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Random {
    return new Contract(address, _abi, signerOrProvider) as Random;
  }
}
